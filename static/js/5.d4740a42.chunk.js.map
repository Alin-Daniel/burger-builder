{"version":3,"sources":["components/Order/Order.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","className","classes","Number","parseFloat","price","toFixed","Button","clicked","deleteOrder","btnType","Orders","this","onFetchOrders","token","userId","_this","orders","Spinner","loading","Order_Order","id","onDeleteOrder","Component","connect","state","auth","dispatch","actions","orderId","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,yJCqCHC,EAhCD,SAACC,GACX,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KACR,CACIC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKtC,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACrC,OAAOC,EAAAC,EAAAC,cAAA,QACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKV,EAAGJ,MAAOI,EAAGJ,KARf,KAQuBI,EAAGH,OAR1B,OAWX,OACII,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAQtB,OACpBW,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,qBAAaU,OAAOC,WAAWtB,EAAMuB,OAAOC,QAAQ,KAC9Df,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQC,QAAS1B,EAAM2B,YAAaC,QAAQ,UAA5C,4CCxBNC,8LAEEC,KAAK9B,MAAM+B,cAAcD,KAAK9B,MAAMgC,MAAOF,KAAK9B,MAAMiC,yCAEjD,IAAAC,EAAAJ,KACDK,EAAS1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,MAYb,OAXKN,KAAK9B,MAAMqC,UACZF,EAASL,KAAK9B,MAAMmC,OAAO5B,IAAI,SAAAR,GAAK,OAChCU,EAAAC,EAAAC,cAAC2B,EAAD,CACIpB,IAAKnB,EAAMwC,GACXtC,YAAaF,EAAME,YACnBsB,MAAOxB,EAAMwB,MACbI,YAAe,kBAAMO,EAAKlC,MAAMwC,cAAczC,EAAMwC,GAAIL,EAAKlC,MAAMgC,aAM3EvB,EAAAC,EAAAC,cAAA,WACKwB,UAnBIM,aAyCNC,sBAhBS,SAAAC,GACpB,MAAO,CACHR,OAAQQ,EAAM5C,MAAMoC,OACpBE,QAASM,EAAM5C,MAAMsC,QACrBL,MAAOW,EAAMC,KAAKZ,MAClBC,OAAQU,EAAMC,KAAKX,SAIA,SAAAY,GACvB,MAAO,CACHd,cAAe,SAACC,EAAOC,GAAR,OAAmBY,EAASC,IAAoBd,EAAOC,KACtEO,cAAe,SAACO,EAASf,GAAV,OAAoBa,EAASC,IAAoBC,EAASf,OAIlEU,CAA6CM,YAAiBnB,EAAQoB","file":"static/js/5.d4740a42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__W-Npf\"};","import React from 'react';\r\n\r\nimport Button from '../UI/Button/Button';\r\n\r\nimport classes from './Order.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>EUR {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n            <Button clicked={props.deleteOrder} btnType=\"Danger\">Delete</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order\r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price}\r\n                    deleteOrder = {() => this.props.onDeleteOrder(order.id, this.props.token)}\r\n                />\r\n            ));\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\r\n        onDeleteOrder: (orderId, token) => dispatch(actions.deleteOrder(orderId, token))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}